<?php
/**
 * @var Laminas\View\Renderer\PhpRenderer $this
 */
?>
<?= $this->doctype() ?>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <?= $this->headTitle('Image Owl Project')->setSeparator(' - ')->setAutoEscape(false) ?>

        <?= $this->headMeta()
            ->appendName('viewport', 'width=device-width, initial-scale=1.0')
            ->appendHttpEquiv('X-UA-Compatible', 'IE=edge')
        ?>

        <!-- Le styles -->
        <?= $this->headLink([
                                'rel' => 'shortcut icon',
                                'type' => 'image/vnd.microsoft.icon',
                                'href' => $this->basePath() . '/img/favicon.ico'
                            ])
            ->prependStylesheet($this->basePath('css/style.css'))
            ->prependStylesheet($this->basePath('css/bootstrap.min.css'))
?>

        <!-- Scripts -->
        <?= $this->headScript() ?>

        <?= $this->inlineScript()
            ->prependFile($this->basePath('js/bootstrap.min.js'))
            ->prependFile($this->basePath('js/jquery-3.6.0.min.js')) ?>

        <script>
            function updateIds(){
                let $dataRows = document.getElementsByClassName('dataRow');
                let $r1Inputs = document.getElementsByClassName('r1');
                let $r2Inputs = document.getElementsByClassName('r2');
                let $r3Inputs = document.getElementsByClassName('r3');
                let $avgInputs = document.getElementsByClassName('avg');
                let $avgSpanInputs = document.getElementsByClassName('avgSpan');
                let $sumInputs = document.getElementsByClassName('sum');
                let $sumSpanInputs = document.getElementsByClassName('sumSpan');
                for(let $i = 0; $i < $dataRows.length; $i++){
                    $dataRows[$i].setAttribute('id', $i.toString());
                    $r1Inputs[$i].setAttribute('id', 'r1'+$i.toString());
                    $r1Inputs[$i].setAttribute('name', 'r1'+$i.toString());
                    $r2Inputs[$i].setAttribute('id', 'r2'+$i.toString());
                    $r2Inputs[$i].setAttribute('name', 'r2'+$i.toString());
                    $r3Inputs[$i].setAttribute('id', 'r3'+$i.toString());
                    $r3Inputs[$i].setAttribute('name', 'r3'+$i.toString());
                    $avgInputs[$i].setAttribute('id', 'avg'+$i.toString());
                    $avgInputs[$i].setAttribute('name', 'avg'+$i.toString());
                    $sumInputs[$i].setAttribute('id', 'sum'+$i.toString());
                    $sumInputs[$i].setAttribute('name', 'sum'+$i.toString());
                    $avgSpanInputs[$i].setAttribute('id', 'avgSpan'+$i.toString());
                    $sumSpanInputs[$i].setAttribute('id', 'sumSpan'+$i.toString());
                }
                // VERY IMPORTANT -- Update the hidden input 'rowCount' to pass to controller and loop the inputs
                document.getElementById('rowCount').value = $dataRows.length;
            }

            function rowMath($inputElement){
                console.log("Hello World");
                let $rowElement = $inputElement.parentNode.parentNode;
                let $idInt = $rowElement.id;
                let $r1NaN = 0;
                let $r2NaN = 0;
                let $r3NaN = 0;
                let $average;
                let $sum;

                let $r1 = parseFloat(document.getElementById('r1'+$idInt).value);
                if(isNaN($r1)){
                    $r1 = 0;
                    $r1NaN = 1;
                }
                let $r2 = parseFloat(document.getElementById('r2'+$idInt).value);
                if(isNaN($r2)){
                    $r2 = 0;
                    $r2NaN = 1;
                }
                let $r3 = parseFloat(document.getElementById('r3'+$idInt).value);
                if(isNaN($r3)){
                    $r3 = 0;
                    $r3NaN = 1;
                }
                $sum = $r1 + $r2 + $r3;
                console.log($sum);
                if(3 === $r1NaN + $r2NaN + $r3NaN) {                    ;
                    $sum = 'Undefined';
                    $average = 'Undefined';
                } else {
                    // Note: use of .toFixed DEMANDS the average is presented with one decimal
                    $average = ($sum/3).toFixed(1);
                    console.log($average);
                }
                document.getElementById('avg'+$idInt).value = $average;
                document.getElementById('avgSpan'+$idInt).innerHTML = $average; // Note use of .innerHTML for <span>
                document.getElementById('sum'+$idInt).value = $sum;
                document.getElementById('sumSpan'+$idInt).innerHTML = $sum; // Note use of .innerHTML for <span>
            }

            function removeRow($removeButton){
                let $rowElement = $removeButton.parentNode.parentNode;
                document.getElementById('theTable').deleteRow($rowElement.rowIndex);
                updateIds();
            }

            function addRow(){
                let $table = document.getElementById('theTable');
                let $row = $table.insertRow(-1);
                $row.setAttribute('class', 'dataRow');
                // Note: the variables assigned to the inserted cells here are named for the input class they will contain,
                // not the actual td element
                let $r1 = $row.insertCell(0);
                addInputElement($r1, 'r1', true);
                let $r2 = $row.insertCell(1);
                addInputElement($r2, 'r2', true);
                let $r3 = $row.insertCell(2);
                addInputElement($r3, 'r3', true);
                let $avg = $row.insertCell(3);
                addInputElement($avg, 'avg');
                addSpanElement($avg, 'avgSpan');
                let $sum = $row.insertCell(4);
                addInputElement($sum, 'sum');
                addSpanElement($sum, 'sumSpan');
                let $remBtn = $row.insertCell(5);
                addRemoveBtn($remBtn);
                updateIds();
            }

            function addSpanElement($td, $name){
                let $spanElement = document.createElement('span');
                $spanElement.setAttribute('class', $name);
                $td.appendChild($spanElement);
            }

            function addInputElement($td, $name, $rInput = false){

                let $inputElement = document.createElement('input');
                $inputElement.setAttribute('class', $name);
                $inputElement.setAttribute('name', ''); // This is handled in updateIds()
                if($rInput){
                    $inputElement.setAttribute('style', 'border: none');
                    $inputElement.setAttribute('type', 'number');
                    $inputElement.setAttribute('onchange', "rowMath(this)");
                } else {
                    $inputElement.setAttribute('type', 'hidden');
                }
                $td.appendChild($inputElement);
            }

            function addRemoveBtn($td){
                let $removeBtn = document.createElement('button');
                $removeBtn.innerHTML = "Remove";
                $removeBtn.setAttribute('onclick', "removeRow(this)");
                $td.appendChild($removeBtn);
            }
        </script>
        <style>
            table.table-bordered td, table.table-bordered input {
                text-align: center;
            }
        </style>

    </head>
    <body>
        <nav class="navbar navbar-expand-md navbar-dark mb-4" role="navigation">
            <div class="container">
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav">
                        <li class="nav-item active">
                            <a class="nav-link" href="<?= $this->url('home') ?>">
                                Home <span class="sr-only">(current)</span>
                            </a>
                        </li>
                        <li class="nav-item active">
                            <a class="nav-link" href="<?= $this->url('application', ['action' => 'solution']) ?>">
                                Solution <span class="sr-only">(current)</span>
                            </a>
                        </li>
                        <li class="nav-item active">
                            <a class="nav-link" href="<?= $this->url('application', ['action' => 'report']) ?>">
                                Report <span class="sr-only">(current)</span>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
        <div class="container">
            <?= $this->content ?>

            <footer>
                <br><br>
            </footer>
        </div>
    </body>
</html>
